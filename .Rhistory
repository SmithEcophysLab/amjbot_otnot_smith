vcmax_var
## calculate the cost of acclimation as the variability in Vcmax
vcmax_var = c()
vcmax_var
i
sd(acclimation_values[[i]]$Vcmax_tmean)
for (i in 1:90){
var = sd(acclimation_values[[i]]$vcmax)
vcmax_var = c(vcmax_var, var)
}
plot(vcmax_var ~ seq(1, 90, 1))
HF_mean_date
photosynthesis_season_gc = photosynthesis_season * 10454400 * 1e-6 * 12
par(mfrow = c(1, 1), mar = c(8, 8, 1, 8))
plot(photosynthesis_season_gc ~ seq(1, 90, 1), type = 'l', lwd = 6, lty = 1, ylim = c(200, 325), xlim = c(1, 90), yaxt = 'n', xaxt = 'n', ylab = '', xlab = '')
axis(2, seq(200, 325, 25), cex.axis = 1.5, las = 2)
par(new = T)
plot(vcmax_var ~ seq(1, 90, 1), type = 'l', lwd = 6, lty = 2, col = 'red', ylim = c(2, 10), xlim = c(1, 90), yaxt = 'n', xaxt = 'n', ylab = '', xlab = '')
axis(1, seq(0, 90, 10), cex.axis = 1.5)
axis(4, seq(2, 10, 2), cex.axis = 1.5, las = 2)
mtext(side = 1, 'Acclimation timescale (days)', cex = 2, line = 4)
mtext(side = 2, expression('Leaf C assimilation (gC m'^'-2'*' yr'^'-1'*')'), cex = 2, line = 4)
mtext(side = 4, expression('Photosynthetic cost (µmol m'^'-2'*' s'^'-1'*')'), cex = 2, line = 4)
legend('topright', c('Assimilation', 'Cost'), col = c('black', 'red'), lwd = 6, lty = c(1, 2), cex = 2)
photosynthesis_season_gc
par(mfrow = c(1, 1), mar = c(8, 8, 1, 8))
plot(photosynthesis_season_gc ~ seq(1, 90, 1), type = 'l', lwd = 6, lty = 1, ylim = c(600, 800), xlim = c(1, 90), yaxt = 'n', xaxt = 'n', ylab = '', xlab = '')
axis(2, seq(200, 325, 25), cex.axis = 1.5, las = 2)
par(new = T)
plot(vcmax_var ~ seq(1, 90, 1), type = 'l', lwd = 6, lty = 2, col = 'red', ylim = c(2, 10), xlim = c(1, 90), yaxt = 'n', xaxt = 'n', ylab = '', xlab = '')
axis(1, seq(0, 90, 10), cex.axis = 1.5)
axis(4, seq(2, 10, 2), cex.axis = 1.5, las = 2)
mtext(side = 1, 'Acclimation timescale (days)', cex = 2, line = 4)
mtext(side = 2, expression('Leaf C assimilation (gC m'^'-2'*' yr'^'-1'*')'), cex = 2, line = 4)
mtext(side = 4, expression('Photosynthetic cost (µmol m'^'-2'*' s'^'-1'*')'), cex = 2, line = 4)
legend('topright', c('Assimilation', 'Cost'), col = c('black', 'red'), lwd = 6, lty = c(1, 2), cex = 2)
vcmax_var
par(mfrow = c(1, 1), mar = c(8, 8, 1, 8))
plot(photosynthesis_season_gc ~ seq(1, 90, 1), type = 'l', lwd = 6, lty = 1, ylim = c(600, 800), xlim = c(1, 90), yaxt = 'n', xaxt = 'n', ylab = '', xlab = '')
axis(2, seq(200, 325, 25), cex.axis = 1.5, las = 2)
par(new = T)
plot(vcmax_var ~ seq(1, 90, 1), type = 'l', lwd = 6, lty = 2, col = 'red', ylim = c(6, 20), xlim = c(1, 90), yaxt = 'n', xaxt = 'n', ylab = '', xlab = '')
axis(1, seq(0, 90, 10), cex.axis = 1.5)
axis(4, seq(2, 10, 2), cex.axis = 1.5, las = 2)
mtext(side = 1, 'Acclimation timescale (days)', cex = 2, line = 4)
mtext(side = 2, expression('Leaf C assimilation (gC m'^'-2'*' yr'^'-1'*')'), cex = 2, line = 4)
mtext(side = 4, expression('Photosynthetic cost (µmol m'^'-2'*' s'^'-1'*')'), cex = 2, line = 4)
legend('topright', c('Assimilation', 'Cost'), col = c('black', 'red'), lwd = 6, lty = c(1, 2), cex = 2)
par(mfrow = c(1, 1), mar = c(8, 8, 1, 8))
plot(photosynthesis_season_gc ~ seq(1, 90, 1), type = 'l', lwd = 6, lty = 1, ylim = c(600, 800), xlim = c(1, 90), yaxt = 'n', xaxt = 'n', ylab = '', xlab = '')
axis(2, seq(200, 325, 25), cex.axis = 1.5, las = 2)
par(new = T)
plot(vcmax_var ~ seq(1, 90, 1), type = 'l', lwd = 6, lty = 2, col = 'red', ylim = c(4, 20), xlim = c(1, 90), yaxt = 'n', xaxt = 'n', ylab = '', xlab = '')
axis(1, seq(0, 90, 10), cex.axis = 1.5)
axis(4, seq(2, 10, 2), cex.axis = 1.5, las = 2)
mtext(side = 1, 'Acclimation timescale (days)', cex = 2, line = 4)
mtext(side = 2, expression('Leaf C assimilation (gC m'^'-2'*' yr'^'-1'*')'), cex = 2, line = 4)
mtext(side = 4, expression('Photosynthetic cost (µmol m'^'-2'*' s'^'-1'*')'), cex = 2, line = 4)
legend('topright', c('Assimilation', 'Cost'), col = c('black', 'red'), lwd = 6, lty = c(1, 2), cex = 2)
photosynthesis_season
cbind(photosynthesis_season, vcmax_var)
## make a pretty plot with them together
timescale_dataframe <- data.frame(cbind(photosynthesis_season, vcmax_var))
timescale_dataframe
timescale_plot <- ggplot(data = timescale_dataframe, aes(y = photosynthesis_season, x = seq(1,90,1))) +
geom_line()
library(ggplot2)
timescale_plot <- ggplot(data = timescale_dataframe, aes(y = photosynthesis_season, x = seq(1,90,1))) +
geom_line()
timescale_plot
timescale_plot <- ggplot(data = timescale_dataframe, aes(y = photosynthesis_season/photosynthesis_season[1], x = seq(1,90,1))) +
geom_line()
timescale_plot
timescale_plot <- ggplot(data = timescale_dataframe, aes(y = photosynthesis_season/photosynthesis_season[1], x = seq(1,90,1))) +
theme(legend.position = "right",
plot.title = element_text(size = rel(2.2)),
legend.title = element_text(size = rel(1.5)),
legend.text = element_text(size = rel(1.5)),
plot.tag = element_text(size = rel(2)),
axis.title.y=element_text(size=rel(2.2), colour = 'black'),
axis.title.x=element_text(size=rel(2.2), colour = 'black'),
axis.text.x=element_text(size=rel(2), colour = 'black'),
axis.text.y=element_text(size=rel(2), colour = 'black'),
panel.background = element_rect(fill = 'white', colour = 'black'),
panel.grid.major = element_line(colour = "grey")) +
geom_line()
timescale_plot
timescale_plot <- ggplot(data = timescale_dataframe, aes(y = photosynthesis_season/photosynthesis_season[1], x = seq(1,90,1))) +
theme(legend.position = "right",
plot.title = element_text(size = rel(2.2)),
legend.title = element_text(size = rel(1.5)),
legend.text = element_text(size = rel(1.5)),
plot.tag = element_text(size = rel(2)),
axis.title.y=element_text(size=rel(2.2), colour = 'black'),
axis.title.x=element_text(size=rel(2.2), colour = 'black'),
axis.text.x=element_text(size=rel(2), colour = 'black'),
axis.text.y=element_text(size=rel(2), colour = 'black'),
panel.background = element_rect(fill = 'white', colour = 'black'),
panel.grid.major = element_line(colour = "grey")) +
geom_line(size = 2, color = 'black', type = 1)
timescale_plot <- ggplot(data = timescale_dataframe, aes(y = photosynthesis_season/photosynthesis_season[1], x = seq(1,90,1))) +
theme(legend.position = "right",
plot.title = element_text(size = rel(2.2)),
legend.title = element_text(size = rel(1.5)),
legend.text = element_text(size = rel(1.5)),
plot.tag = element_text(size = rel(2)),
axis.title.y=element_text(size=rel(2.2), colour = 'black'),
axis.title.x=element_text(size=rel(2.2), colour = 'black'),
axis.text.x=element_text(size=rel(2), colour = 'black'),
axis.text.y=element_text(size=rel(2), colour = 'black'),
panel.background = element_rect(fill = 'white', colour = 'black'),
panel.grid.major = element_line(colour = "grey")) +
geom_line(linewidth = 2, color = 'black', lty = 1)
timescale_plot
timescale_plot <- ggplot(data = timescale_dataframe, aes(y = photosynthesis_season/photosynthesis_season[1], x = seq(1,90,1))) +
theme(legend.position = "right",
plot.title = element_text(size = rel(2.2)),
legend.title = element_text(size = rel(1.5)),
legend.text = element_text(size = rel(1.5)),
plot.tag = element_text(size = rel(2)),
axis.title.y=element_text(size=rel(2.2), colour = 'black'),
axis.title.x=element_text(size=rel(2.2), colour = 'black'),
axis.text.x=element_text(size=rel(2), colour = 'black'),
axis.text.y=element_text(size=rel(2), colour = 'black'),
panel.background = element_rect(fill = 'white', colour = 'black'),
panel.grid.major = element_line(colour = "grey")) +
geom_line(linewidth = 2, color = 'black', lty = 1) +
ylab('Rel. seasonal photosynthesis') +
xlab('Acclimation timescale (days)')
timescale_plot
timescale_plot <- ggplot(data = timescale_dataframe, aes(y = photosynthesis_season/photosynthesis_season[1], x = seq(1,90,1))) +
theme(legend.position = "right",
plot.title = element_text(size = rel(2.2)),
legend.title = element_text(size = rel(1.5)),
legend.text = element_text(size = rel(1.5)),
plot.tag = element_text(size = rel(2)),
axis.title.y=element_text(size=rel(2.2), colour = 'black'),
axis.title.x=element_text(size=rel(2.2), colour = 'black'),
axis.text.x=element_text(size=rel(2), colour = 'black'),
axis.text.y=element_text(size=rel(2), colour = 'black'),
panel.background = element_rect(fill = 'white', colour = 'black'),
panel.grid.major = element_line(colour = "grey")) +
geom_line(linewidth = 2, color = 'black', lty = 1) +
geom_line(aes(y=vcmax_var), linewidth = 2, color = 'red', lty = 2) +
ylab('Rel. seasonal photosynthesis') +
xlab('Acclimation timescale (days)')
timescale_plot
timescale_plot <- ggplot(data = timescale_dataframe, aes(y = photosynthesis_season/photosynthesis_season[1], x = seq(1,90,1))) +
theme(legend.position = "right",
plot.title = element_text(size = rel(2.2)),
legend.title = element_text(size = rel(1.5)),
legend.text = element_text(size = rel(1.5)),
plot.tag = element_text(size = rel(2)),
axis.title.y=element_text(size=rel(2.2), colour = 'black'),
axis.title.x=element_text(size=rel(2.2), colour = 'black'),
axis.text.x=element_text(size=rel(2), colour = 'black'),
axis.text.y=element_text(size=rel(2), colour = 'black'),
panel.background = element_rect(fill = 'white', colour = 'black'),
panel.grid.major = element_line(colour = "grey")) +
geom_line(linewidth = 2, color = 'black', lty = 1) +
geom_line(aes(y=vcmax_var/vcmax_var[1]), linewidth = 2, color = 'red', lty = 2) +
ylab('Rel. seasonal photosynthesis') +
xlab('Acclimation timescale (days)')
timescale_plot
timescale_plot <- ggplot(data = timescale_dataframe, aes(y = photosynthesis_season/photosynthesis_season[1], x = seq(1,90,1))) +
theme(legend.position = "right",
plot.title = element_text(size = rel(2.2)),
legend.title = element_text(size = rel(1.5)),
legend.text = element_text(size = rel(1.5)),
plot.tag = element_text(size = rel(2)),
axis.title.y=element_text(size=rel(2.2), colour = 'black'),
axis.title.x=element_text(size=rel(2.2), colour = 'black'),
axis.text.x=element_text(size=rel(2), colour = 'black'),
axis.text.y=element_text(size=rel(2), colour = 'black'),
panel.background = element_rect(fill = 'white', colour = 'black'),
panel.grid.major = element_line(colour = "grey")) +
geom_line(linewidth = 2, color = 'black', lty = 1) +
geom_line(aes(y=vcmax_var/vcmax_var[1]), linewidth = 2, color = 'red', lty = 2) +
ylab('Relative seasonal value') +
xlab('Acclimation timescale (days)') +
scale_colour_manual(values =c('black'='black','red'='red'), labels = c('Photosynthesis','Cost'))
timescale_plot
timescale_plot <- ggplot(data = timescale_dataframe, aes(y = photosynthesis_season/photosynthesis_season[1], x = seq(1,90,1))) +
theme(legend.position = "right",
plot.title = element_text(size = rel(2.2)),
legend.title = element_text(size = rel(1.5)),
legend.text = element_text(size = rel(1.5)),
plot.tag = element_text(size = rel(2)),
axis.title.y=element_text(size=rel(2.2), colour = 'black'),
axis.title.x=element_text(size=rel(2.2), colour = 'black'),
axis.text.x=element_text(size=rel(2), colour = 'black'),
axis.text.y=element_text(size=rel(2), colour = 'black'),
panel.background = element_rect(fill = 'white', colour = 'black'),
panel.grid.major = element_line(colour = "grey")) +
geom_line(linewidth = 2, color = 'black', lty = 1) +
geom_line(aes(y=vcmax_var/vcmax_var[1]), linewidth = 2, color = 'red', lty = 2) +
ylab('Relative seasonal value') +
xlab('Acclimation timescale (days)') +
scale_colour_manual(values =c('black'='black','red'='red'), labels = c('Photosynthesis','Cost'))
timescale_plot
timescale_plot <- ggplot(data = timescale_dataframe, aes(y = photosynthesis_season/photosynthesis_season[1], x = seq(1,90,1))) +
theme(legend.position = "right",
plot.title = element_text(size = rel(2.2)),
legend.title = element_text(size = rel(1.5)),
legend.text = element_text(size = rel(1.5)),
plot.tag = element_text(size = rel(2)),
axis.title.y=element_text(size=rel(2.2), colour = 'black'),
axis.title.x=element_text(size=rel(2.2), colour = 'black'),
axis.text.x=element_text(size=rel(2), colour = 'black'),
axis.text.y=element_text(size=rel(2), colour = 'black'),
panel.background = element_rect(fill = 'white', colour = 'black'),
panel.grid.major = element_line(colour = "grey")) +
geom_line(linewidth = 2, color = 'black', lty = 1) +
geom_line(aes(y=vcmax_var/vcmax_var[1]), linewidth = 2, color = 'red', lty = 2) +
ylab('Relative seasonal value') +
xlab('Acclimation timescale (days)') +
scale_colour_manual(name = 'wale', values =c('black'='black','red'='red'), labels = c('Photosynthesis','Cost'))
timescale_plot
timescale_plot <- ggplot(data = timescale_dataframe, aes(y = photosynthesis_season/photosynthesis_season[1], x = seq(1,90,1))) +
theme(legend.position = "right",
plot.title = element_text(size = rel(2.2)),
# legend.title = element_text(size = rel(1.5)),
# legend.text = element_text(size = rel(1.5)),
plot.tag = element_text(size = rel(2)),
axis.title.y=element_text(size=rel(2.2), colour = 'black'),
axis.title.x=element_text(size=rel(2.2), colour = 'black'),
axis.text.x=element_text(size=rel(2), colour = 'black'),
axis.text.y=element_text(size=rel(2), colour = 'black'),
panel.background = element_rect(fill = 'white', colour = 'black'),
panel.grid.major = element_line(colour = "grey")) +
geom_line(linewidth = 2, color = 'black', lty = 1) +
geom_line(aes(y=vcmax_var/vcmax_var[1]), linewidth = 2, color = 'red', lty = 2) +
ylab('Relative seasonal value') +
xlab('Acclimation timescale (days)') +
scale_colour_manual(values =c('black'='black','red'='red'), labels = c('Photosynthesis','Cost'))
timescale_plot <- ggplot(data = timescale_dataframe, aes(y = photosynthesis_season/photosynthesis_season[1], x = seq(1,90,1))) +
theme(legend.position = "right",
plot.title = element_text(size = rel(2.2)),
# legend.title = element_text(size = rel(1.5)),
# legend.text = element_text(size = rel(1.5)),
plot.tag = element_text(size = rel(2)),
axis.title.y=element_text(size=rel(2.2), colour = 'black'),
axis.title.x=element_text(size=rel(2.2), colour = 'black'),
axis.text.x=element_text(size=rel(2), colour = 'black'),
axis.text.y=element_text(size=rel(2), colour = 'black'),
panel.background = element_rect(fill = 'white', colour = 'black'),
panel.grid.major = element_line(colour = "grey")) +
geom_line(linewidth = 2, color = 'black', lty = 1) +
geom_line(aes(y=vcmax_var/vcmax_var[1]), linewidth = 2, color = 'red', lty = 2) +
ylab('Relative seasonal value') +
xlab('Acclimation timescale (days)') +
scale_colour_manual(values =c('black'='black','red'='red'), labels = c('Photosynthesis','Cost'))
timescale_plot
timescale_plot <- ggplot(data = timescale_dataframe, aes(y = photosynthesis_season/photosynthesis_season[1], x = seq(1,90,1))) +
theme(#legend.position = "right",
plot.title = element_text(size = rel(2.2)),
# legend.title = element_text(size = rel(1.5)),
# legend.text = element_text(size = rel(1.5)),
plot.tag = element_text(size = rel(2)),
axis.title.y=element_text(size=rel(2.2), colour = 'black'),
axis.title.x=element_text(size=rel(2.2), colour = 'black'),
axis.text.x=element_text(size=rel(2), colour = 'black'),
axis.text.y=element_text(size=rel(2), colour = 'black'),
panel.background = element_rect(fill = 'white', colour = 'black'),
panel.grid.major = element_line(colour = "grey")) +
geom_line(linewidth = 2, color = 'black', lty = 1) +
geom_line(aes(y=vcmax_var/vcmax_var[1]), linewidth = 2, color = 'red', lty = 2) +
ylab('Relative seasonal value') +
xlab('Acclimation timescale (days)') +
scale_colour_manual(values =c('black'='black','red'='red'), labels = c('Photosynthesis','Cost'))
timescale_plot
timescale_plot <- ggplot(data = timescale_dataframe, aes(y = photosynthesis_season/photosynthesis_season[1], x = seq(1,90,1))) +
theme(legend.position = "right",
plot.title = element_text(size = rel(2.2)),
legend.title = element_text(size = rel(1.5)),
legend.text = element_text(size = rel(1.5)),
plot.tag = element_text(size = rel(2)),
axis.title.y=element_text(size=rel(2.2), colour = 'black'),
axis.title.x=element_text(size=rel(2.2), colour = 'black'),
axis.text.x=element_text(size=rel(2), colour = 'black'),
axis.text.y=element_text(size=rel(2), colour = 'black'),
panel.background = element_rect(fill = 'white', colour = 'black'),
panel.grid.major = element_line(colour = "grey")) +
geom_line(aes(color='black'), linewidth = 2, color = 'black', lty = 1) +
geom_line(aes(y=vcmax_var/vcmax_var[1], ,color='red'), linewidth = 2, color = 'red', lty = 2) +
ylab('Relative seasonal value') +
xlab('Acclimation timescale (days)') +
scale_colour_manual(values =c('black'='black','red'='red'), labels = c('Photosynthesis','Cost'))
timescale_plot
timescale_plot <- ggplot(data = timescale_dataframe, aes(y = photosynthesis_season/photosynthesis_season[1], x = seq(1,90,1))) +
theme(legend.position = "right",
plot.title = element_text(size = rel(2.2)),
legend.title = element_text(size = rel(1.5)),
legend.text = element_text(size = rel(1.5)),
plot.tag = element_text(size = rel(2)),
axis.title.y=element_text(size=rel(2.2), colour = 'black'),
axis.title.x=element_text(size=rel(2.2), colour = 'black'),
axis.text.x=element_text(size=rel(2), colour = 'black'),
axis.text.y=element_text(size=rel(2), colour = 'black'),
panel.background = element_rect(fill = 'white', colour = 'black'),
panel.grid.major = element_line(colour = "grey")) +
geom_line(aes(color='black'), linewidth = 2, color = 'black', lty = 1) +
geom_line(aes(y=vcmax_var/vcmax_var[1], color='red'), linewidth = 2, color = 'red', lty = 2) +
ylab('Relative seasonal value') +
xlab('Acclimation timescale (days)') +
scale_colour_manual(values =c('black'='black','red'='red'), labels = c('Photosynthesis','Cost'))
timescale_plot
timescale_plot <- ggplot(data = timescale_dataframe, aes(y = photosynthesis_season/photosynthesis_season[1], x = seq(1,90,1))) +
theme(legend.position = "right",
plot.title = element_text(size = rel(2.2)),
legend.title = element_text(size = rel(1.5)),
legend.text = element_text(size = rel(1.5)),
plot.tag = element_text(size = rel(2)),
axis.title.y=element_text(size=rel(2.2), colour = 'black'),
axis.title.x=element_text(size=rel(2.2), colour = 'black'),
axis.text.x=element_text(size=rel(2), colour = 'black'),
axis.text.y=element_text(size=rel(2), colour = 'black'),
panel.background = element_rect(fill = 'white', colour = 'black'),
panel.grid.major = element_line(colour = "grey")) +
geom_line(aes(color='black'), linewidth = 2, lty = 1) +
geom_line(aes(y=vcmax_var/vcmax_var[1], color='red'), linewidth = 2, lty = 2) +
ylab('Relative seasonal value') +
xlab('Acclimation timescale (days)') +
scale_colour_manual(values =c('black'='black','red'='red'), labels = c('Photosynthesis','Cost'))
timescale_plot
timescale_plot <- ggplot(data = timescale_dataframe, aes(y = photosynthesis_season/photosynthesis_season[1], x = seq(1,90,1))) +
theme(legend.position = "right",
plot.title = element_text(size = rel(2.2)),
legend.title = element_text(size = rel(1.5)),
legend.text = element_text(size = rel(1.5)),
plot.tag = element_text(size = rel(2)),
axis.title.y=element_text(size=rel(2.2), colour = 'black'),
axis.title.x=element_text(size=rel(2.2), colour = 'black'),
axis.text.x=element_text(size=rel(2), colour = 'black'),
axis.text.y=element_text(size=rel(2), colour = 'black'),
panel.background = element_rect(fill = 'white', colour = 'black'),
panel.grid.major = element_line(colour = "grey")) +
geom_line(aes(color='black'), linewidth = 2, lty = 1) +
geom_line(aes(y=vcmax_var/vcmax_var[1], color='red'), linewidth = 2, lty = 2) +
ylab('Relative seasonal value') +
xlab('Acclimation timescale (days)') +
scale_colour_manual(name = NULL, values =c('black'='black','red'='red'), labels = c('Photosynthesis','Cost'))
timescale_plot
timescale_plot <- ggplot(data = timescale_dataframe, aes(y = photosynthesis_season/photosynthesis_season[1], x = seq(1,90,1))) +
theme(legend.position = "right",
plot.title = element_text(size = rel(2.2)),
legend.title = element_text(size = rel(1.5)),
legend.text = element_text(size = rel(1.5)),
plot.tag = element_text(size = rel(2)),
axis.title.y=element_text(size=rel(2.2), colour = 'black'),
axis.title.x=element_text(size=rel(2.2), colour = 'black'),
axis.text.x=element_text(size=rel(2), colour = 'black'),
axis.text.y=element_text(size=rel(2), colour = 'black'),
panel.background = element_rect(fill = 'white', colour = 'black'),
panel.grid.major = element_line(colour = "grey")) +
geom_line(aes(color='black', lty = 1), linewidth = 2) +
geom_line(aes(y=vcmax_var/vcmax_var[1], color='red', lty = 2), linewidth = 2) +
ylab('Relative seasonal value') +
xlab('Acclimation timescale (days)') +
scale_colour_manual(name = NULL, values =c('black'='black','red'='red'), labels = c('Photosynthesis','Cost'))
timescale_plot
timescale_plot <- ggplot(data = timescale_dataframe, aes(y = photosynthesis_season/photosynthesis_season[1], x = seq(1,90,1))) +
theme(legend.position = "right",
plot.title = element_text(size = rel(2.2)),
legend.title = element_text(size = rel(1.5)),
legend.text = element_text(size = rel(1.5)),
plot.tag = element_text(size = rel(2)),
axis.title.y=element_text(size=rel(2.2), colour = 'black'),
axis.title.x=element_text(size=rel(2.2), colour = 'black'),
axis.text.x=element_text(size=rel(2), colour = 'black'),
axis.text.y=element_text(size=rel(2), colour = 'black'),
panel.background = element_rect(fill = 'white', colour = 'black'),
panel.grid.major = element_line(colour = "grey")) +
geom_line(aes(color='black'), linewidth = 2) +
geom_line(aes(y=vcmax_var/vcmax_var[1], color='red'), linewidth = 2) +
ylab('Relative seasonal value') +
xlab('Acclimation timescale (days)') +
scale_colour_manual(name = NULL, values =c('black'='black','red'='red'), labels = c('Photosynthesis','Cost'))
timescale_plot
timescale_plot <- ggplot(data = timescale_dataframe, aes(y = photosynthesis_season/photosynthesis_season[1], x = seq(1,90,1))) +
theme(legend.position = "right",
plot.title = element_text(size = rel(2.2)),
legend.title = element_text(size = rel(1.5)),
legend.text = element_text(size = rel(1.5)),
plot.tag = element_text(size = rel(2)),
axis.title.y=element_text(size=rel(2.2), colour = 'black'),
axis.title.x=element_text(size=rel(2.2), colour = 'black'),
axis.text.x=element_text(size=rel(2), colour = 'black'),
axis.text.y=element_text(size=rel(2), colour = 'black'),
panel.background = element_rect(fill = 'white', colour = 'black'),
panel.grid.major = element_line(colour = "grey")) +
geom_line(aes(color='black'), linewidth = 2) +
geom_line(aes(y=vcmax_var/vcmax_var[1], color='red'), linewidth = 2) +
ylab('Relative seasonal value') +
xlab('Acclimation timescale (days)') +
scale_colour_manual(name = NULL, values =c('black'='black','red'='red'), labels = c('Photosynthesis','Cost')) +
ylim(c(0.2, 1)) +
xlim(c(0, 90))
timescale_plot
timescale_plot <- ggplot(data = timescale_dataframe, aes(y = photosynthesis_season/photosynthesis_season[1], x = seq(1,90,1))) +
theme(legend.position = "right",
plot.title = element_text(size = rel(2.2)),
legend.title = element_text(size = rel(1.5)),
legend.text = element_text(size = rel(1)),
plot.tag = element_text(size = rel(2)),
axis.title.y=element_text(size=rel(2.2), colour = 'black'),
axis.title.x=element_text(size=rel(2.2), colour = 'black'),
axis.text.x=element_text(size=rel(2), colour = 'black'),
axis.text.y=element_text(size=rel(2), colour = 'black'),
panel.background = element_rect(fill = 'white', colour = 'black'),
panel.grid.major = element_line(colour = "grey")) +
geom_line(aes(color='black'), linewidth = 2) +
geom_line(aes(y=vcmax_var/vcmax_var[1], color='red'), linewidth = 2) +
ylab('Relative seasonal value') +
xlab('Acclimation timescale (days)') +
scale_colour_manual(name = NULL, values =c('black'='black','red'='red'), labels = c('Photosynthesis','Cost')) +
ylim(c(0.2, 1)) +
xlim(c(0, 90))
timescale_plot
head(HF_temp)
head(HF_par)
max()
max
?max
## calculate max values for acclimation
HF_mean_day$date = as.factor(as.Date(HF_mean_day$endDateTime))
HF_max_date = summarize(HF_group_by_date,
par = pmax(PARMean, na.rm = T),
temp = mean(tempSingleMean, na.rm = T),
vpd = mean(VPD, na.rm = T))
head(HF_max_date)
head(HF_mean_date)
## calculate max values for acclimation
HF_mean_day$date = as.factor(as.Date(HF_mean_day$endDateTime))
HF_group_by_date = group_by(HF_mean_day[, 2:6], date)
head(HF_group_by_date)
head(HF_mean_day)
HF_max_date = summarize(HF_group_by_date,
par = max(PARMean, na.rm = T),
temp = mean(tempSingleMean, na.rm = T),
vpd = mean(VPD, na.rm = T))
head(HF_max_date)
head(HF_mean_date)
## calculate running means
### previous 30 minutes: i = 1
### previous 3 months: i = 4320 (48 * 90 days)
MA_max <- list()
for (i in 1:90){
temp_MA = rollapply(HF_mean_date$temp, i, mean, fill = NA, align ='right')
par_MA = rollapply(HF_mean_date$par, i, mean, fill = NA, align ='right')
vpd_MA = rollapply(HF_mean_date$vpd, i, mean, fill = NA, align ='right')
temporary = cbind(temp_MA, par_MA, vpd_MA)
colnames(temporary) = c(paste('temp_MA', i, sep = '_'), paste('par_MA', i, sep = '_'), paste('vpd_MA', i, sep = '_'))
MA_max[[i]] = temporary
}
## calculate optimal traits throughout the summer (June to September)
days_interest = 515:636 # June through September
acclimation_values_max = list()
for (i in 1:90){
vars = calc_optimal_vcmax(cao = 400,
tg_c = MA[[i]][days_interest, 1],
paro = MA[[i]][days_interest, 2],
z = 300,
vpdo = MA[[i]][days_interest, 3])
vars_list = cbind(vars, paste(i - 1))
acclimation_values_max[[i]] = vars_list
}
acclimation_values_max[[7]]
HF_mean_day$date
HF_mean_day
## make a dataframe with 30-min HF data that includes acclimated vcmax and jmax values
HF_30min_data > subset(HF_mean_day, VPD!=NA & date >= 2017-06-01)
## make a dataframe with 30-min HF data that includes acclimated vcmax and jmax values
HF_30min_data <- subset(HF_mean_day, VPD!=NA & date >= 2017-06-01)
## make a dataframe with 30-min HF data that includes acclimated vcmax and jmax values
HF_30min_data <- subset(HF_mean_day, VPD!=NA & date > 2017-05-30)
## make a dataframe with 30-min HF data that includes acclimated vcmax and jmax values
HF_30min_data <- subset(HF_mean_day, VPD!=NA & as.Date(date) >= as.Date("2017-06-01"))
HF_30min_data
head(HF_30min_data)
## make a dataframe with 30-min HF data that includes acclimated vcmax and jmax values
HF_30min_data <- subset(HF_mean_day, VPD!=NA & as.Date(date) > as.Date("2017-06-01"))
head(HF_30min_data)
tail(HF_mean_day)
as.Date(HF_mean_day$date)
## make a dataframe with 30-min HF data that includes acclimated vcmax and jmax values
HF_30min_data <- subset(HF_mean_day, as.Date(date) > as.Date("2017-06-01"))
head(HF_30min_data)
## make a dataframe with 30-min HF data that includes acclimated vcmax and jmax values
HF_30min_data <- subset(HF_mean_day, as.Date(date) > as.Date("2017-05-30") & as.Date(date) < as.Date("2017-10-31"))
head(HF_30min_data)
## make a dataframe with 30-min HF data that includes acclimated vcmax and jmax values
HF_30min_data <- subset(HF_mean_day, as.Date(date) > as.Date("2017-05-31") & as.Date(date) < as.Date("2017-10-31"))
head(HF_30min_data)
tail(HF_30min_data)
seq(as.Date("2017-10-31"), as.Date("2017-11-30"), 1)
## create data frame to merge in acclimated values
merge_doys <- cbind(seq(as.Date("2017-06-01"), as.Date("2017-09-30"), 1), days_interest)
merge_doys
## create data frame to merge in acclimated values
merge_doys <- cbind(as.factor(seq(as.Date("2017-06-01"), as.Date("2017-09-30"), 1)), days_interest)
merge_doys
## create data frame to merge in acclimated values
merge_doys <- cbind(as.factor(as.Date(seq(as.Date("2017-06-01"), as.Date("2017-09-30"), 1))), days_interest)
merge_doys
## create data frame to merge in acclimated values
merge_doys <- dad.frame(as.factor(as.Date(seq(as.Date("2017-06-01"), as.Date("2017-09-30"), 1))), days_interest)
## create data frame to merge in acclimated values
merge_doys <- data.frame(as.factor(as.Date(seq(as.Date("2017-06-01"), as.Date("2017-09-30"), 1))), days_interest)
merge_doys
colnames(merge_doys) <- c('Date', 'doy')
merge_doys
